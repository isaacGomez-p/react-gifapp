{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GridComponent.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","type","value","onChange","target","GifGridItem","id","title","url","console","log","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","fixed_width","GridComponent","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACI,sBAAMC,SATW,SAAEC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAK,OAAOP,GAAP,mBAAsBO,OAC1CN,EAAc,MAKlB,SACI,uBACIO,KAAO,OACPC,MAAUT,EACVU,SAjBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,QCNnBG,EAAc,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAIrC,OAFAC,QAAQC,IAAI,CAACJ,KAAIC,QAAOC,QAGpB,sBAAKG,UAAY,yCAAjB,UACI,kCAAOJ,EAAP,OACA,qBAAKK,IAAQJ,EAAMK,IAAQN,Q,uBCSxBO,EAhBK,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbR,EADa,iDACmCS,UAAUF,GAD7C,8DAEAG,MAAOV,GAFP,cAEbW,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHlB,GAAIkB,EAAIlB,GACRC,MAAOiB,EAAIjB,MACXC,IAAG,UAAEgB,EAAIC,cAAN,aAAE,EAAYC,YAAYlB,QATlB,kBAaZc,GAbY,4CAAH,sDCEPK,EAAgB,SAAC,GAAoB,IAAjBZ,EAAgB,EAAhBA,SAAgB,ECDrB,SAAEA,GAAe,IAAD,EAEdvB,mBAAS,CAC/B6B,KAAM,GACNO,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAU,WACNjB,EAAQC,GACHiB,MAAO,SAAAC,GACJC,YAAW,WACPJ,EAAS,CACLT,KAAMY,EACNL,SAAS,MAEd,UAEZ,IAEIC,EDhBmBM,CAAcpB,GAAhCa,EAFqC,EAErCA,QAASP,EAF4B,EAE5BA,KAEjB,OACI,qCACI,mCAAON,EAAP,OAEEa,GAAW,8CACb,qBAAKjB,UAAW,YAAhB,SAEEU,EAAKE,KAAK,SAAAC,GAAG,OACR,cAAC,EAAD,eAEUA,GADGA,EAAIlB,aEkBrB8B,EA/BM,WAAM,MAGa5C,mBAAU,CAAE,WAHzB,mBAGhB6C,EAHgB,KAGJ9C,EAHI,KASvB,OACI,qCACI,gDACA,uBAEA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,6BAEQ8C,EAAWd,KAAK,SAAAR,GAAQ,OAEhB,cAAC,EAAD,CAEIA,SAAaA,GADJA,Y,MCjBzCuB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.571a5f5e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n    /*const [setCategorie, setSetCategorie] = useState(setCategories);*/\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value )\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2){\r\n            setCategories( categ => [  inputValue, ...categ, ] );\r\n            setInputValue('');\r\n        }        \r\n    }\r\n\r\n    return (        \r\n        <form onSubmit = { handleSubmit }>\r\n            <input\r\n                type = \"text\"\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    console.log({id, title, url}); \r\n\r\n    return (\r\n        <div className = \"card animate__animated animate__bounce\" >\r\n            <p> {  title } </p>\r\n            <img src = { url } alt = { title } />\r\n            \r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const getGifs = async( category ) => {\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=5&api_key=i3CNNejWawqBgg46KTxp4bk42IeWrIS3`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n    \r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.fixed_width.url\r\n        }\r\n    });       \r\n    \r\n    return gifs;\r\n} \r\n\r\nexport default getGifs;\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GridComponent = ( { category } ) => {\r\n    \r\n    const { loading, data } = useFetchGifs( category );\r\n   \r\n    return (\r\n        <>\r\n            <h3> { category } </h3>\r\n\r\n            { loading && <p> Cargando... </p> }\r\n            <div className= \"card-grid\">\r\n            {\r\n              data.map( img => \r\n                   <GifGridItem \r\n                        key = { img.id }\r\n                        { ...img }\r\n                    />\r\n                )\r\n            }                       \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport getGifs from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(  imgs =>{\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                }, 1000);\r\n            });\r\n    }, []);    \r\n\r\n    return state;\r\n    \r\n}\r\n","import React,   { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GridComponent } from './components/GridComponent';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n/*const categories = [ 'One Punch', 'Naruto', 'Dragon Ball' ];*/\r\n    const [categories, setCategories] = useState( [ 'Naruto' ] );\r\n    \r\n    /*const handleAdd = () => {\r\n        setCategories( categ => [ ...categ, 'Tokyo Ghoul' ] );\r\n    }*/\r\n\r\n    return(\r\n        <>\r\n            <h2> GifExpertApp </h2>\r\n            <hr />\r\n            \r\n            <AddCategory setCategories = { setCategories }/>\r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                        \r\n                            <GridComponent  \r\n                                key =  { category }\r\n                                category = { category } />\r\n                        \r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n/*If you want to start measuring performance in your app, pass a function\n to log results (for example: reportWebVitals(console.log))\n or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals*/\n\n"],"sourceRoot":""}